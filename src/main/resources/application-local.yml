server:
  port: 8085

spring:
  ##  profiles:
  ##    active: dev,test,stable
  #  config:
  #    import: optional:configserver:http://config-server-omnidev.omnidev.fc.uralsibbank.ru/
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@//msk-edbt2.fc.uralsibbank.ru:1521/omnidev
    username: SBP
    password: 0106AAsd
  liquibase:
    #    enabled: true
    #    drop-first: false
    change-log: classpath:db/changelog/db.changelog-master.xml
  cloud:
    config:
      import-check:
        enabled: false
    #      enabled: true
    kubernetes:
      discovery:
        enabled: false
      loadbalancer:
        enabled: false
      enabled: false
  #spring:
  ##  profiles:
  ##    active: dev, test, stable
  #  config:
  #    import: optional:configserver:http://config-server-omnidev.omnidev.fc.uralsibbank.ru/
  #

#  jpa:
#    properties:
#      hibernate:
#        show_sql: true
#        use_sql_comments: true
#        format_sql: true
#logging:
#  level:
#    org:
#      hibernate:
#        type: trace

camunda:
  bpm:
    job-execution:
      enabled: false

omni:
  active-environment:
    url: http://gate.dbo2dev.fc.uralsibbank.ru/metric/indexlocal.txt
    cron: "0 * * * * *"
  camunda:
    c2b:
      timer: '{
          sbpConfirm: "PT1M",
          sbpConfirmCancel: "PT1H",
          sbpWaitStatus: "PT15S",
          rtlUnhold: "PT5M",
          rtlUnholdCancel: "PT1H",
          payRequest: "PT3M",
          payRequestCancel: "PT72H",
          rtlSendDocument: "PT30M",
          rtlSendDocumentCancel: "PT5H"
      }'
    b2c:
      timer: '{
          sbpConfirm: "PT1M",
          sbpConfirmCancel: "PT1H",
          sbpWaitStatus: "PT15S",
          rtlUnhold: "PT5M",
          rtlUnholdCancel: "PT1H",
          payRequest: "PT3M",
          payRequestCancel: "PT72H",
          rtlSendDocument: "PT30M",
          rtlSendDocumentCancel: "PT5H"
      }'
  sbp:
    retail-gate-transfer:
      url: http://retail-gate-transfer-omnidev.omnidev.fc.uralsibbank.ru
      # url: http://localhost:8081
      # url: http://gway/xmlgate
    soa:
      # url: http://gate.dbo2dev.fc.uralsibbank.ru/TS_SOA_SMS/send_doc
      url: http://gway/xmlgate
      connect-timeout: 10
      request-timeout: 10
    cft-gate:
      url: http://cft-gate-omnidev.omnidev.fc.uralsibbank.ru
    dbo-omnigate:
      url: http://omnigate-dbo4dev.kd.fc.uralsibbank.ru

    kafka-dmz:
#      bootstrap-servers: "https://msk-as01kafka-t.fc.uralsibbank.ru:9093,https://msk-as02kafka-t.fc.uralsibbank.ru:9093,https://msk-as03kafka-t.fc.uralsibbank.ru:9093"
      bootstrap-servers: "http://localhost:9092"
      username: sbp-stable
      password: "Af21#d34"
      group-id: "sbp-local"
      c2b-topics:
        qr:
          request: "api-manager-stable.korona-gate.c2b-req-calc-data.0"
          response: "api-manager-stable.korona-gate.c2b-ans-calc-data.0"
        pay:
          request: "api-manager-stable.korona-gate.c2b-req-confirm-pay.0"
          response: "api-manager-stable.korona-gate.c2b-ans-confirm-pay.0"
        pay-status:
          request: "api-manager-stable.korona-gate.c2b-req-pay-status.0"
          response: "api-manager-stable.korona-gate.c2b-ans-pay-status.0"
        notice:
          from-dmz: "api-manager-stable.korona-gate.c2b-payment-notice.0"
      b2c-topics:
        pay-check:
          request: "api-manager-stable.korona-gate.b2c-req-pay-check.0"
          response: "api-manager-stable.korona-gate.b2c-ans-pay-check.0"
        pay:
          request: "api-manager-stable.korona-gate.b2c-req-pay-confirm.0"
          response: "api-manager-stable.korona-gate.b2c-ans-pay-confirm.0"
        pay-status:
          request: "api-manager-stable.korona-gate.b2c-req-pay-status.0"
          response: "api-manager-stable.korona-gate.b2c-ans-pay-status.0"
        notice:
          from-dmz: "api-manager-stable.korona-gate.b2c-payment-notice.0"
        refund:
          from-dmz: "api-manager-stable.korona-gate.b2c-in-req-refund-request.0"
          for-dmz: "api-manager-stable.korona-gate.b2c-ans-refund-request.0"
        refund-status:
          from-dmz: "api-manager-stable.korona-gate.b2c-req-pay-status-req.0"
          for-dmz: "api-manager-stable.korona-gate.b2c-ans-pay-status-req.0"
      sbp-pay-topics:
        #qr-subscribe:
        #  from-dmz: "api-manager.system.korona-gate.c2b-sub-req-calc-data.0"
        #  for-dmz: "api-manager.system.korona-gate.c2b-sub-ans-calc-data.0"
        init-payment:
          from-dmz: "api-manager-stable.korona-gate.sbp-pay-init-payment-request.0"
          for-dmz: "api-manager-stable.korona-gate.sbp-pay-init-payment-response.0"
        confirm-payment:
          for-dmz: "api-manager-stable.korona-gate.sbp-pay-confirm-payment-request.0"
          from-dmz: "api-manager-stable.korona-gate.sbp-pay-confirm-payment-response.0"
        cancel-payment:
          for-dmz: "api-manager-stable.korona-gate.sbp-pay-cancel-payment-request.0"
          from-dmz: "api-manager-stable.korona-gate.sbp-pay-cancel-payment-response.0"
      sbp-pay-subscription-topics:
        init-payment:
          # Запрос инициации С2В платежа
          from-dmz: "api-manager-stable.korona-gate.c2b-sub-req-auth-pay.0"
        # Получение ответа на запрос инициации С2В платежа
          for-dmz: "api-manager-stable.korona-gate.c2b-sub-ans-auth-pay.0"
        confirm-payment:
          # Запрос на совершение перевода
          for-dmz: "api-manager-stable.korona-gate.c2b-sub-req-confirm-pay.0"
          # Получение ответа на запроса совершение перевода
          from-dmz: "api-manager-stable.korona-gate.c2b-sub-ans-confirm-pay.0"
        cancel-payment:
          # Запрос Отмена платежа С2В по Подписке
          for-dmz: "api-manager-stable.korona-gate.c2b-sub-req-cancel-pay.0"
          # Ответ Отмена платежа С2В по Подписке
          from-dmz: "api-manager-stable.korona-gate.c2b-sub-ans-cancel-pay.0"
      request-reply:
        timeout-sec: 30
      trust-store:
        location: "/app/secrets/trustStoreKafka.jks"
        password: "kafka_test"

    kafka-omni:
      bootstrap-servers: "http://localhost:9092"
      username: sbp-stable
      password: "Af21#d34"
      c2b-topics:
        notice:
          for-dbo: "omni-stable.sbp.c2b-operation-status.0"
      privileges-group: "sbp.roles-and-privileges"
      policy-group-id: "roles-and-privileges"
      trust-store:
        location: "/app/secrets/trustStoreKafka.jks"
        password: "kafka_test"

    afs:
      host: msk-ds01af
      port: 8089
      username: sbp_user
      password: 95Gbd!J41Bc
      event:
        host: msk-ds01af.fc.uralsibbank.ru
        port: 8088
        scheme: http
        token: Splunk b849ce7f-854a-44a7-b0df-d45575669eb1

    metric:
      last-minutes:
        diff-stage2-and-init: 5
        status: 5
        analysis: 20160
        waiting: 15
        avg-abs-exec-form-start: 30
        avg-abs-exec-to-completed: 3
        completed: 1
        failed: 5

  security:
    # Вкл/выкл безопасность в приложении (опциональное, true по умолчанию)
    enabled: true
    # Настройка jwt
    jwt:
      # Вкл/выкл jwt авторизацию (опциональное, true по умолчанию)
      enabled: true
      # Список разрешённых издателей токена
      issuers: https://keycloak-t.uralsib.ru/auth/realms/omni-dev
      # Список необходимых audience
      audience:
      jwks:
        # Вкл/выкл кеширование публичных ключей (опциональное, true по умолчанию)
        cache-enabled: true
        # Размер кеша (опциональное, 5 по умолчанию)
        cache-size: 5
        # Время жизни кеша (опциональное, 24 по умолчанию)
        cache-expires-in: 24
        # Единицы измерения жизни кеша (опциональное, hours по умолчанию)
        # Доступные значения: days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds
        time-unit: hours
      # Указываются пути которые должны быть доступны без авторизации
      exclude: /actuator/**,/health,/v2/api-docs/**,/v3/api-docs/**,/swagger-ui/**,/admin/**,/webjars/**,/swagger-resources/**,/camunda/**,/camunda-welcome,/engine-rest/**
    # Настройка casbin
    casbin:
      enabled: false
      microservice: sbp
      domain: payment-domain
    kafka:
      bootstrap-servers: "https://msk-as01kafka-t.fc.uralsibbank.ru:9093,https://msk-as02kafka-t.fc.uralsibbank.ru:9093,https://msk-as03kafka-t.fc.uralsibbank.ru:9093"
      topics:
        policies: "omni-dev.policy-service.roles-and-privileges.1"
        privileges: "omni-dev.policy-service.privileges.0"
      privileges-group: "sbp.roles-and-privileges"
      policy-group-id: "sbp-poilicy-group-id"
      trust-store:
        location: "/app/secrets/trustStoreKafka.jks"
        password: "kafka_test"
      password: "Af21#d34"
      username: sbp-stable
    # Настройка keycloak
    keycloak:
      # Адрес keycloak (в формате host.com)
      host: keycloak-t.uralsib.ru
      # Название realm в keycloak
      realm: omni-dev
      # Протокол взаимодействия с keycloak (по умолчанию https)
      application-layer-protocol: https
      # Блок настроек клиента keycloak
      client:
        # Создает бины keycloakService и keycloakClient (опциональное, по умолчанию false)
        create: true
        # Последующие три параметра это credentials для аутентификации в keycloak
        username: sbp
        password: Sbp123
        client-id: omniclient

  audit-history:
    kafka:
      password: "Af21#d34"
      username: "customer-profile-dev"
      bootstrap-address: "https://msk-as01kafka-t.fc.uralsibbank.ru:9093,https://msk-as02kafka-t.fc.uralsibbank.ru:9093,https://msk-as03kafka-t.fc.uralsibbank.ru:9093"
      topic:
        eventLog: "omni-dev.audit-history.event-log.0"
        httpRequest: "omni-dev.audit-history.http-req.0"
        httpResponse: "omni-dev.audit-history.http-res.0"
      trust-store:
        location: "/app/secrets/trustStoreKafka.jks"
        password: "kafka_test"
    application:
      microservice: "SBP"
      domain: "PAYMENT_DOMAIN"
#  metric:
#    enabled: true
